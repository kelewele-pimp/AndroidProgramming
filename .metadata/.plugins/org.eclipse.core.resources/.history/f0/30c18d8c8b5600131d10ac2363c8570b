package db_package;

import android.content.ContentProvider;
import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteDatabase.CursorFactory;
import android.database.sqlite.SQLiteOpenHelper;
import android.net.Uri;
import android.util.Log;

public class ToDoContentProvider extends ContentProvider {

	// Publish the URI for this provider.This URI will be used to
	// access this Content Provider from within other application components
	public static final Uri CONTENT_URI = Uri
			.parse("content://com.desmond.todoprovider/todoitems");

	// Create public static variables that define the column names.
	public static final String KEY_ID = "_id";
	public static final String KEY_TASK = "task";
	public static final String KEY_CREATION_DATE = "creation_date";

	private MySQLiteOpenHelper mYOpenHelper;

	@Override
	public boolean onCreate() {
		// Construct the underlying database.
		// Defer opening the database until you need to perform
		// a query or transaction

		mYOpenHelper = new MySQLiteOpenHelper(getContext(),
				MySQLiteOpenHelper.DATABASE_NAME, null,
				MySQLiteOpenHelper.DATABASE_VERSION);
		return false;
	}

	@Override
	public int delete(Uri uri, String selection, String[] selectionArgs) {

		return 0;
	}

	@Override
	public String getType(Uri uri) {

		return null;
	}

	@Override
	public Uri insert(Uri uri, ContentValues values) {

		return null;
	}

	@Override
	public Cursor query(Uri uri, String[] projection, String selection,
			String[] selectionArgs, String sortOrder) {

		return null;
	}

	@Override
	public int update(Uri uri, ContentValues values, String selection,
			String[] selectionArgs) {

		return 0;
	}

	private static class MySQLiteOpenHelper extends SQLiteOpenHelper {

		// Create variabes to store the database name and version
		// along with the table name
		private static final String DATABASE_NAME = "todoDatabase.db";
		private static final int DATABASE_VERSION = "1";
		private static final String DATABASE_TABLE = "todoItemTable";

		// SQL statement to create a new database
		private static final String DATABASE_CREATE = "create table "
				+ DATABASE_TABLE + " (" + KEY_ID
				+ " integer primary key autoincrement, " + KEY_TASK
				+ " text not null, " + KEY_CREATION_DATE + " long);";

		public MySQLiteOpenHelper(Context context, String name,
				CursorFactory factory, int databaseVersion) {
			super(context, name, factory, databaseVersion);
		}

		// Called when no datebase exists in disk and the helper
		// class needs to create a new one.
		@Override
		public void onCreate(SQLiteDatabase db) {
			db.execSQL(DATABASE_CREATE);
		}

		// Called when there is a database version mismatch the the version
		// of the database on disk needs to be upgraded to the current version.
		@Override
		public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
			// Log the version upgrade
			Log.w("TaskDBAdapter", "Upgrading from version" + oldVersion
					+ " to " + newVersion + " which will destrot all old data");

			// Upgrade the existing database to conform to the new version.
			// Multiple previous versions can be handled by comparing oldVersion
			// and newVersion values.

			// The simplest case is to drop the old table and create a new one.
			db.execSQL("DROP TABLE IF IT EXISTS " + DATABASE_TABLE);
			// create a new one.
			onCreate(db);
		}

	}

}
